(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{445:function(s,t,e){"use strict";e.r(t);var a=e(19),n=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"示例-如何开启-fuse-自动恢复能力"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#示例-如何开启-fuse-自动恢复能力"}},[s._v("#")]),s._v(" 示例 - 如何开启 FUSE 自动恢复能力")]),s._v(" "),t("h2",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),t("p",[s._v("您可以从 "),t("a",{attrs:{href:"https://github.com/fluid-cloudnative/fluid/releases",target:"_blank",rel:"noopener noreferrer"}},[s._v("Fluid Releases"),t("OutboundLink")],1),s._v(" 下载最新的 Fluid 安装包。")]),s._v(" "),t("p",[s._v("在 Fluid 的安装 chart values.yaml 中将 "),t("code",[s._v("csi.featureGates")]),s._v(" 设置为 "),t("code",[s._v("FuseRecovery=true")]),s._v("，表示开启 FUSE 自动恢复功能。\n再参考 "),t("RouterLink",{attrs:{to:"/zh/guide/install.html"}},[s._v("安装文档")]),s._v(" 完成安装。并检查 Fluid 各组件正常运行（这里以 JuiceFSRuntime 为例）：")],1),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl -n fluid-system get po\nNAME                                        READY   STATUS    RESTARTS   AGE\ncsi-nodeplugin-fluid-2gtsz                  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("/2     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          20m\ncsi-nodeplugin-fluid-2h79g                  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("/2     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          20m\ncsi-nodeplugin-fluid-sc459                  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("/2     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          20m\ndataset-controller-57fb4569cd-k2jb7         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          20m\nfluid-webhook-844dcb995f-nfmjl              "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          20m\njuicefsruntime-controller-7d9c964b4-jnbtf   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          20m\n")])])]),t("p",[s._v("通常来说，你会看到一个名为 "),t("code",[s._v("dataset-controller")]),s._v(" 的 Pod、一个名为 "),t("code",[s._v("juicefsruntime-controller")]),s._v(" 的 Pod、一个名为 "),t("code",[s._v("fluid-webhook")]),s._v(" 的 Pod\n和多个名为 "),t("code",[s._v("csi-nodeplugin")]),s._v(" 的 Pod 正在运行。其中，"),t("code",[s._v("csi-nodeplugin")]),s._v(" 这些 Pod 的数量取决于你的 Kubernetes 集群中结点的数量。")]),s._v(" "),t("h2",{attrs:{id:"运行示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行示例"}},[s._v("#")]),s._v(" 运行示例")]),s._v(" "),t("p",[t("strong",[s._v("为 namespace 开启 webhook")])]),s._v(" "),t("p",[s._v("FUSE 挂载点自动恢复功能需要 pod 的 mountPropagation 设置为 "),t("code",[s._v("HostToContainer")]),s._v(" 或 "),t("code",[s._v("Bidirectional")]),s._v("，才能将挂载点信息在容器和宿主机之间传递。而 "),t("code",[s._v("Bidirectional")]),s._v(" 需要容器为特权容器。\nFluid webhook 提供了自动将 pod 的 mountPropagation 设置为 "),t("code",[s._v("HostToContainer")]),s._v("，为了开启该功能，需要将对应的 namespace 打上 "),t("code",[s._v("fluid.io/enable-injection=true")]),s._v(" 的标签。操作如下：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl patch ns default -p "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{"metadata": {"labels": {"fluid.io/enable-injection": "true"}}}\'')]),s._v("\nnamespace/default patched\n$ kubectl get ns default --show-labels\nNAME      STATUS   AGE     LABELS\ndefault   Active   4d12h   fluid.io/enable-injection"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true,kubernetes.io/metadata.name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("default\n")])])]),t("p",[t("strong",[s._v("创建 dataset 和 runtime")])]),s._v(" "),t("p",[s._v("针对不同类型的 runtime 创建相应的 Runtime 资源，以及同名的 Dataset。这里以 JuiceFSRuntime 为例，具体可参考 "),t("RouterLink",{attrs:{to:"/zh/samples/juicefs_runtime.html"}},[s._v("文档")]),s._v("，如下：")],1),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl get juicefsruntime\nNAME      WORKER PHASE   FUSE PHASE   AGE\njfsdemo   Ready          Ready        2m58s\n$ kubectl get dataset\nNAME      UFS TOTAL SIZE   CACHED   CACHE CAPACITY   CACHED PERCENTAGE   PHASE   AGE\njfsdemo   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Calculating"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("    N/A                       N/A                 Bound   2m55s\n")])])]),t("p",[t("strong",[s._v("创建 Pod 资源对象")])]),s._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[s._v("$ cat<<EOF "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("sample.yaml\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Pod\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" demo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("app\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" demo\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumeMounts")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mountPath")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /data\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" demo\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" demo\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("persistentVolumeClaim")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("claimName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" jfsdemo\n  EOF\n$ kubectl create "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("f sample.yaml\npod/demo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("app created\n")])])]),t("p",[t("strong",[s._v("查看 Pod 是否创建，并检查其 mountPropagation")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl get po "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" demo\ndemo-app             "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          96s\njfsdemo-fuse-g9pvp   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          95s\njfsdemo-worker-0     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          4m25s\n$ kubectl get po demo-app -oyaml "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" volumeMounts -A "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n    volumeMounts:\n    - mountPath: /data\n      mountPropagation: HostToContainer\n      name: demo\n")])])]),t("h2",{attrs:{id:"测试-fuse-挂载点自动恢复"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试-fuse-挂载点自动恢复"}},[s._v("#")]),s._v(" 测试 FUSE 挂载点自动恢复")]),s._v(" "),t("p",[t("strong",[s._v("删除 FUSE pod")])]),s._v(" "),t("p",[s._v("删除 FUSE pod 后，并等待其重启：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl delete po jfsdemo-fuse-g9pvp\npod "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jfsdemo-fuse-g9pvp"')]),s._v(" deleted\n$ kubectl get po\nNAME                 READY   STATUS    RESTARTS   AGE\ndemo-app             "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          5m7s\njfsdemo-fuse-bdsdt   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          6s\njfsdemo-worker-0     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          7m56s\n")])])]),t("p",[s._v("新的 FUSE pod 创建后，再查看 demo pod 中的挂载点情况：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it demo-app "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\nkubectl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("POD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("COMMAND"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" is DEPRECATED and will be removed "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a future version. Use kubectl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("POD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" -- "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("COMMAND"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" instead.\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@demo-app /"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# df -h")]),s._v("\nFilesystem      Size  Used Avail Use% Mounted on\noverlay         100G  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(".4G   91G  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("% /\ntmpfs            64M     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("   64M   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("% /dev\ntmpfs           "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".0G     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".0G   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("% /sys/fs/cgroup\nJuiceFS:minio   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".0P   64K  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".0P   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("% /data\n/dev/sdb1       100G  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(".4G   91G  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("% /etc/hosts\nshm              64M     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("   64M   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("% /dev/shm\ntmpfs           "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(".8G   12K  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(".8G   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("% /run/secrets/kubernetes.io/serviceaccount\ntmpfs           "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".0G     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".0G   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("% /proc/acpi\ntmpfs           "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".0G     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".0G   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("% /proc/scsi\ntmpfs           "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".0G     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".0G   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("% /sys/firmware\n")])])]),t("p",[s._v("可以看到，容器中没有出现 "),t("code",[s._v("Transport endpoint is not connected")]),s._v(" 的报错，表明挂载点已经恢复。")]),s._v(" "),t("p",[t("strong",[s._v("查看 dataset 的 event")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ kubectl describe dataset jfsdemo\nName:         jfsdemo\nNamespace:    default\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nEvents:\n  Type    Reason              Age                  From         Message\n  ----    ------              ----                 ----         -------\n  Normal  FuseRecoverSucceed  2m34s "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x5 over 11m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  FuseRecover  Fuse recover /var/lib/kubelet/pods/6c1e0318-858b-4ead-976b-37ccce26edfe/volumes/kubernetes.io~csi/default-jfsdemo/mount succeed\n")])])]),t("p",[s._v("可以看到 Dataset 的 event 有一条 "),t("code",[s._v("FuseRecover")]),s._v(" 的事件，表明 Fluid 已经对挂载做过一次恢复操作。")]),s._v(" "),t("h2",{attrs:{id:"注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[s._v("#")]),s._v(" 注意")]),s._v(" "),t("p",[s._v("在 FUSE pod crash 的时候，挂载点恢复的时间依赖 FUSE pod 自身的恢复以及 csi 轮询 kubelet 的周期大小（环境变量 "),t("code",[s._v("RECOVER_FUSE_PERIOD")]),s._v("），在恢复之前挂载点会出现 "),t("code",[s._v("Transport endpoint is not connected")]),s._v(" 的错误，这是符合预期的。\n另外，挂载点恢复是通过重复 bind 的方法实现的，对于 FUSE pod crash 之前应用已经打开的文件描述符，挂载点恢复后该 fd 亦不可恢复，需要应用自身实现错误重试，增强应用自身的鲁棒性。")])])}),[],!1,null,null,null);t.default=n.exports}}]);