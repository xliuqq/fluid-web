(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{436:function(t,a,s){"use strict";s.r(a);var e=s(19),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"示例-如何保障-fluid-的-serverless-任务顺利完成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-如何保障-fluid-的-serverless-任务顺利完成"}},[t._v("#")]),t._v(" 示例 - 如何保障 Fluid 的 Serverless 任务顺利完成")]),t._v(" "),a("h2",{attrs:{id:"背景介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景介绍"}},[t._v("#")]),t._v(" 背景介绍")]),t._v(" "),a("p",[t._v("在 Serverless 场景中， Job 等 Workload，当 Pod 的 user container 完成任务并退出后，需要 Fuse Sidecar 也可以主动退出，\n从而使 Job Controller 能够正确判断 Pod 所处的完成状态。然而，fuse container 自身并没有退出机制，Fluid Application Controller 会检测集群中带 fluid label 的 Pod，\n在 user container 退出后，将 fuse container 正常退出，以达到 Job 完成的状态。")]),t._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("p",[t._v("您可以从 "),a("a",{attrs:{href:"https://github.com/fluid-cloudnative/fluid/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fluid Releases"),a("OutboundLink")],1),t._v(" 下载最新的 Fluid 安装包。\n再参考 "),a("RouterLink",{attrs:{to:"/zh/guide/install.html"}},[t._v("安装文档")]),t._v(" 完成安装。并检查 Fluid 各组件正常运行（这里以 JuiceFSRuntime 为例）：")],1),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ kubectl -n fluid-system get po\nNAME                                         READY   STATUS    RESTARTS   AGE\ndataset-controller-86768b56fb-4pdts          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          36s\nfluid-webhook-f77465869-zh8rv                "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          62s\nfluidapp-controller-597dbd77dd-jgsbp         "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          81s\njuicefsruntime-controller-65d54bb48f-vnzpj   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          99s\n")])])]),a("p",[t._v("通常来说，你会看到一个名为 "),a("code",[t._v("dataset-controller")]),t._v(" 的 Pod、一个名为 "),a("code",[t._v("juicefsruntime-controller")]),t._v(" 的 Pod、一个名为 "),a("code",[t._v("fluid-webhook")]),t._v(" 的 Pod 和一个名为 "),a("code",[t._v("fluidapp-controller")]),t._v(" 的 Pod。")]),t._v(" "),a("h2",{attrs:{id:"运行示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行示例"}},[t._v("#")]),t._v(" 运行示例")]),t._v(" "),a("p",[a("strong",[t._v("为 namespace 开启 webhook")])]),t._v(" "),a("p",[t._v("Fluid webhook 提供了在 Serverless 场景中为 pod 注入 FUSE Sidecar 的功能，为了开启该功能，需要将对应的 namespace 打上 "),a("code",[t._v("fluid.io/enable-injection=true")]),t._v(" 的标签。操作如下：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ kubectl patch ns default -p "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"metadata": {"labels": {"fluid.io/enable-injection": "true"}}}\'')]),t._v("\nnamespace/default patched\n$ kubectl get ns default --show-labels\nNAME      STATUS   AGE     LABELS\ndefault   Active   4d12h   fluid.io/enable-injection"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true,kubernetes.io/metadata.name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("default\n")])])]),a("p",[a("strong",[t._v("创建 dataset 和 runtime")])]),t._v(" "),a("p",[t._v("针对不同类型的 runtime 创建相应的 Runtime 资源，以及同名的 Dataset。这里以 JuiceFSRuntime 为例，具体可参考 "),a("RouterLink",{attrs:{to:"/zh/samples/juicefs_runtime.html"}},[t._v("文档")]),t._v("，如下：")],1),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ kubectl get juicefsruntime\nNAME      WORKER PHASE   FUSE PHASE   AGE\njfsdemo   Ready          Ready        2m58s\n$ kubectl get dataset\nNAME      UFS TOTAL SIZE   CACHED   CACHE CAPACITY   CACHED PERCENTAGE   PHASE   AGE\njfsdemo   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Calculating"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    N/A                       N/A                 Bound   2m55s\n")])])]),a("p",[a("strong",[t._v("创建 Job 资源对象")])]),t._v(" "),a("p",[t._v("在 Serverless 场景使用 Fluid，需要在应用 Pod 中添加 "),a("code",[t._v('serverless.fluid.io/inject: "true"')]),t._v(" label。如下：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("$ cat<<EOF "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("sample.yaml\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" batch/v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Job\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" demo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("app\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serverless.fluid.io/inject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" demo\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("c\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" echo $(date "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("u) "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" /data/out.txt\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /bin/sh\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /data\n              "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" demo\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Never\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" demo\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeClaim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("claimName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jfsdemo\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("backoffLimit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\nEOF\n$ kubectl create "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f sample.yaml\njob.batch/demo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("app created\n")])])]),a("p",[a("strong",[t._v("查看 job 是否完成")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ kubectl get job\nNAME       COMPLETIONS   DURATION   AGE\ndemo-app   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1           14s        46s\n$ kubectl get po\nNAME               READY   STATUS      RESTARTS      AGE\ndemo-app-wdfr8     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/2     Completed   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("             25s\njfsdemo-worker-0   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("             14m\n")])])]),a("p",[t._v("可以看到，job 已经完成，其 pod 有两个 container，均已完成。")])])}),[],!1,null,null,null);a.default=n.exports}}]);